name: assess modernisation effort
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
# This prevents first startup interactive expectations generating errors ðŸ‘‡
env:
  DOTNET_APPCAT_SKIP_FIRST_TIME_EXPERIENCE: true

jobs:
  assess:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    # The analysis version used doesn't matter afaik so you can always use the latest versions to support analysis
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 8.0.x
    - name: Install appcat
      run: dotnet tool install -g dotnet-appcat
    - name: Run appcat JSON
      run: appcat analyze "./app" --source folder --report appcat-results/reports --serializer json --non-interactive --code --binaries --target AppService.Linux
    - name: Run appcat HTML
      run: appcat analyze "./app" --source folder --report appcat-results/reports/html --serializer html --non-interactive --code --binaries --target AppService.Linux
    - name: Upload results
      uses: actions/upload-artifact@v4
      with:
        path: appcat-results/
  send-report:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
      uses: actions/checkout@v2

      - name: Set report contents as environment variable
      id: set-report-contents
      run: |
        echo "::set-env name=REPORT_CONTENTS::$(cat appcat-results/report.json)"

      - name: Send report
      run: |
        curl -X PUT "https://<your-function-app>.azurewebsites.net/api/<your-function-endpoint>?org=${{ github.repository_owner }}&repo=${{ github.repository }}&branch=${{ github.ref_name }}&pr=${{ github.event.pull_request.number }}&commit=${{ github.sha }}&committer=${{ github.actor }}" \
        -H "Content-Type: application/json" \
        --data-binary "${{ env.REPORT_CONTENTS }}"